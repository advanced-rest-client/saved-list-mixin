{
  "schema_version": "1.0.0",
  "mixins": [
    {
      "description": "A mixin to be applied to a list that renders saved requests.\nIt contains methods to query for saved list and to search saved requests.",
      "summary": "",
      "path": "saved-list-mixin.js",
      "properties": [
        {
          "name": "requests",
          "type": "Array.<Object>",
          "description": "The list of request to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 34,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "querying",
          "type": "boolean | null | undefined",
          "description": "True when the element is querying the database for the data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "pageLimit",
          "type": "number | null | undefined",
          "description": "Single page query limit.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 8
            },
            "end": {
              "line": 49,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "150"
        },
        {
          "name": "_queryStartKey",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_querySkip",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "queryOptions",
          "type": "Object | null | undefined",
          "description": "Computed value.\nDatabase query options for pagination.\nUse `pageLimit` to set pagination limit.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 8
            },
            "end": {
              "line": 60,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "dataUnavailable",
          "type": "boolean | null | undefined",
          "description": "Computed value. True if query ended and there's no results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isSearch",
          "type": "boolean | null | undefined",
          "description": "When set this component is in sSavedListMixinearch mode.\nThis means that the list won't be loaded automatically and\nsome operations not related to search are disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "searchListEmpty",
          "type": "boolean | null | undefined",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noAuto",
          "type": "boolean | null | undefined",
          "description": "When set it won't query for data automatically when attached to the DOM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 90,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeQueryOptions",
          "description": "Computes pagination options.\nThis resets pagination status.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "limit",
              "type": "Number",
              "description": "Items per page limit."
            },
            {
              "name": "startKey",
              "type": "String",
              "description": "Query start key"
            },
            {
              "name": "skip",
              "type": "Number",
              "description": "Number of records to skip."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Pagination options for PouchDB."
          }
        },
        {
          "name": "_computeDataUnavailable",
          "description": "Computes value for the `dataUnavailable` proeprty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean",
              "description": "[description]"
            },
            {
              "name": "loading",
              "type": "Booelan",
              "description": "[description]"
            },
            {
              "name": "isSearch",
              "type": "Boolean",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeSearchListEmpty",
          "description": "Computes value for the `searchListEmpty` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean",
              "description": "[description]"
            },
            {
              "name": "loading",
              "type": "Booelan",
              "description": "[description]"
            },
            {
              "name": "isSearch",
              "type": "Boolean",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "refresh",
          "description": "Refreshes the data from the datastore.\nIt resets the query options, clears requests and makes a query to the datastore.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "Resets the state of the variables.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dataImportHandler",
          "description": "Handler for `data-imported` cutom event.\nRefreshes data state.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDatabaseDestroy",
          "description": "Handler for the `datastore-destroyed` custom event.\nIf one of destroyed databases is saved store then it refreshes the sate.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "loadNext",
          "description": "Loads next page of results. It runs the task in a debouncer set to\nnext render frame so it's safe to call it more than once at the time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendItems",
          "description": "Appends array items to the `requests` property.\nIt should be used instead of direct manipulation of the `items` array.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of requests to appenmd"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadPage",
          "description": "Loads next page of results from the datastore.\nPagination used here has been described in PouchDB pagination strategies\ndocument.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchListEvent",
          "description": "Dispatches `request-list` custom event and returns the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_handleError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cause"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processRequestsResponse",
          "description": "Prepares data to display in the view.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Object",
              "description": "List of documents returned by the model."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of request to be passed to the list view."
          }
        },
        {
          "name": "_sortSavedResults",
          "description": "Sorts the query results by `updated` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 4
            },
            "end": {
              "line": 365,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "query",
          "description": "Dispatches `request-query` custom event to `request-model`\nto perform a query.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query",
              "type": "String",
              "description": "The query to performs. Pass empty stirng\n(or nothing) to reset query state."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Resolved promise when the query ends."
          }
        },
        {
          "name": "_dispatchQueryEvent",
          "description": "Dispatches `request-query` custom event.\nThis event is handled by `request-mode` element to query the\ndatastore for user search term.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 424,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "q",
              "type": "String",
              "description": "Query passed to event detail."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_prepareQuery",
          "description": "Prepares a query string to search the data store.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query",
              "type": "String",
              "description": "User search term"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Processed query"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 440,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ArcComponents.SavedListMixin",
      "attributes": [
        {
          "name": "requests",
          "description": "The list of request to render.",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 34,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "querying",
          "description": "True when the element is querying the database for the data.",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "page-limit",
          "description": "Single page query limit.",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 8
            },
            "end": {
              "line": 49,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "query-options",
          "description": "Computed value.\nDatabase query options for pagination.\nUse `pageLimit` to set pagination limit.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 8
            },
            "end": {
              "line": 60,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "data-unavailable",
          "description": "Computed value. True if query ended and there's no results.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-search",
          "description": "When set this component is in sSavedListMixinearch mode.\nThis means that the list won't be loaded automatically and\nsome operations not related to search are disabled.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "search-list-empty",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-auto",
          "description": "When set it won't query for data automatically when attached to the DOM.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 90,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
